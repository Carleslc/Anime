(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{"1ce4":function(e,t,r){"use strict";r.r(t);var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("q-select",{ref:"providerSelect",attrs:{dense:"",standout:"",dark:"","options-selected-class":"filter-options","options-dark":!1,options:e.providers},scopedSlots:e._u([{key:"prepend",fn:function(){return[r("q-icon",{attrs:{name:"cast"}}),r("q-tooltip",{attrs:{"transition-show":"fade","transition-hide":"fade"}},[e._v("\n      Select which provider must be opened when clicking over an episode, either in Spanish (ES) or English (EN).\n      "),r("br"),r("br"),e._v("\n      Feeling Lucky options are based on search engine, trying to get a proper streamer, but it doesn't mean it always\n      work.\n      "),r("br"),r("br"),e._v("\n      If selected provider cannot find an episode try to change the provider.\n    ")])]},proxy:!0},{key:"option",fn:function(t){return[r("q-item",e._g(e._b({directives:[{name:"ripple",rawName:"v-ripple"}]},"q-item",t.itemProps,!1),t.itemEvents),[r("q-item-section",{attrs:{avatar:""}},[r("q-avatar",{attrs:{square:"",size:"sm"}},[r("img",{attrs:{src:t.opt.value.icon}})])],1),r("q-item-section",[r("q-item-label",[e._v(e._s(t.opt.label))])],1)],1)]}},e.provider?{key:"after",fn:function(){return[r("q-btn",{attrs:{flat:"",dense:"",type:"a",href:e.providerUrl,target:"_blank"},on:{click:e.openProvider}},[r("q-avatar",{attrs:{square:"",size:"sm"}},[r("img",{attrs:{src:e.provider.value.icon}})]),r("q-tooltip",{attrs:{"transition-show":"fade","transition-hide":"fade"}},[e._v("\n        "+e._s(e.provider.label)+"\n      ")])],1)]},proxy:!0}:null],null,!0),model:{value:e.provider,callback:function(t){e.provider=t},expression:"provider"}})},o=[],i=r("b06b");const s={40:"down"};function a(e){return{mounted(){document.addEventListener("keydown",this.keyListener)},beforeDestroy(){document.removeEventListener("keydown",this.keyListener)},methods:{keyListener(t){const r=t.which||t.keyCode,n=s[r];if(n){const t=e[n];if(t){const e=this[t];e?e.call(this):console.error(`Key listener ${t} not found in component methods`)}}}}}}var p=r("a861"),c=r("c01e"),d={mixins:[Object(c["a"])("provider",Object),a({down:"showProviderPopup"})],props:{value:{type:Object,required:!0}},data(){return{providers:p["c"]}},computed:{providerUrl(){return this.provider.value.url}},methods:{openProvider(){const e=this.providerUrl;e?Object(i["a"])(e):this.showProviderPopup()},showProviderPopup(){this.$refs.providerSelect.showPopup()}}},l=d,u=r("2877"),v=r("ddd8"),m=r("0016"),h=r("05c0"),f=r("66e5"),b=r("4074"),w=r("cb32"),y=r("0170"),k=r("9c40"),q=r("714f"),_=r("eebe"),g=r.n(_),P=Object(u["a"])(l,n,o,!1,null,null,null);t["default"]=P.exports;g()(P,"components",{QSelect:v["a"],QIcon:m["a"],QTooltip:h["a"],QItem:f["a"],QItemSection:b["a"],QAvatar:w["a"],QItemLabel:y["a"],QBtn:k["a"]}),g()(P,"directives",{Ripple:q["a"]})},c01e:function(e,t,r){"use strict";function n(e,t){const r={props:{value:{type:t,required:!0}},computed:{}};return r.computed[e]={get(){return this.value},set(e){this.$emit("input",e)}},r}r.d(t,"a",(function(){return n}))}}]);